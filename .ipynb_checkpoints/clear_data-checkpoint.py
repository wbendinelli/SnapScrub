import os
import logging
import shutil

def clear_data(root_path="data"):
    """
    Remove all files and subdirectories from the project's data directory.

    This function deletes:
    - All image files (JPEG, PNG, HEIC, BMP, TIFF)
    - All temporary and cache files (*.tmp, *.log, __pycache__, temp, cache)
    - All CSV files generated by the code (*.csv)
    - All macOS system files (.DS_Store)
    - Empties the data directory while preserving its structure.

    Parameters:
        root_path (str): The root directory containing data to be cleared.

    Returns:
        None
    """
    if not os.path.exists(root_path):
        logging.warning(f"The specified path does not exist: {root_path}")
        return

    # Define file extensions to remove
    file_extensions_to_remove = ('.jpg', '.jpeg', '.png', '.heic', '.bmp', '.tiff', '.csv', '.tmp', '.log', '.DS_Store')

    # Define folders to be deleted
    folders_to_delete = ["__pycache__", "temp", "cache"]

    for foldername, subfolders, filenames in os.walk(root_path):
        for filename in filenames:
            file_path = os.path.join(foldername, filename)

            # Remove specific file types
            if filename.endswith(file_extensions_to_remove):
                try:
                    os.remove(file_path)
                    logging.info(f"Deleted file: {file_path}")
                except Exception as e:
                    logging.error(f"Failed to delete file {file_path}: {e}")

        for subfolder in subfolders:
            if subfolder in folders_to_delete:
                folder_path = os.path.join(foldername, subfolder)
                try:
                    shutil.rmtree(folder_path)
                    logging.info(f"Deleted folder: {folder_path}")
                except Exception as e:
                    logging.error(f"Failed to delete folder {folder_path}: {e}")

    # Remove empty directories
    for foldername, subfolders, _ in os.walk(root_path, topdown=False):
        for subfolder in subfolders:
            folder_path = os.path.join(foldername, subfolder)
            if not os.listdir(folder_path):
                try:
                    os.rmdir(folder_path)
                    logging.info(f"Deleted empty folder: {folder_path}")
                except Exception as e:
                    logging.error(f"Failed to delete empty folder {folder_path}: {e}")

    logging.info("Data cleanup completed successfully.")

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    clear_data()