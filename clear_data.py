import os
import shutil
import logging

def clear_data(root_path):
    """
    Delete unnecessary files and folders within the project directory, including:
    - .DS_Store files (macOS system files)
    - __pycache__ folders (Python cache)
    - .ipynb_checkpoints folders (Jupyter cache)
    - Temporary files with extensions: .tmp, .log, .bak
    - CSV files generated by the project

    Parameters:
        root_path (str): The root directory of the project.

    Returns:
        None
    """
    logging.info("Starting data cleanup...")

    file_extensions_to_remove = ['.tmp', '.log', '.bak', '.csv']
    folders_to_remove = ['__pycache__', '.ipynb_checkpoints']
    files_to_remove = ['.DS_Store']

    # Walk through the directory tree to find and delete specified items
    for dirpath, dirnames, filenames in os.walk(root_path):
        # Remove specific files by extension or name
        for file in filenames:
            file_path = os.path.join(dirpath, file)
            if file in files_to_remove or any(file.endswith(ext) for ext in file_extensions_to_remove):
                try:
                    os.remove(file_path)
                    logging.info(f"Deleted file: {file_path}")
                except Exception as e:
                    logging.error(f"Failed to delete file {file_path}: {e}")

        # Remove specific folders
        for folder in folders_to_remove:
            folder_path = os.path.join(dirpath, folder)
            if os.path.exists(folder_path):
                try:
                    shutil.rmtree(folder_path)
                    logging.info(f"Deleted folder: {folder_path}")
                except Exception as e:
                    logging.error(f"Failed to delete folder {folder_path}: {e}")

    logging.info("Data cleanup completed successfully.")

if __name__ == "__main__":
    project_root = "."  # Define root path as current directory
    clear_data(project_root)